name: Deploy to GitHub Pages

on:
  push:
    branches: [ vitrine ]
  pull_request:
    branches: [ vitrine ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          cd frontend
          python -m pip install --upgrade pip
          pip install flask python-dotenv pathlib

      - name: Create dummy .env file and logs directory
        run: |
          echo "SECRET_KEY=github-actions-dummy-key" > .env
          echo "FRONTEND_PORT=5002" >> .env
          echo "FRONTEND_DEBUG=False" >> .env
          mkdir -p logs

      - name: Generate static site
        run: |
          cd frontend
          python generate_static.py

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './frontend/dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/vitrine'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
